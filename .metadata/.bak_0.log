!SESSION 2018-09-25 20:51:46.201 -----------------------------------------------
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0_92
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-25 20:52:49.274
!MESSAGE Warning: EGit couldn't detect the installation path "gitPrefix" of native Git. Hence EGit can't respect system level
Git settings which might be configured in ${gitPrefix}/etc/gitconfig under the native Git installation directory.
The most important of these settings is core.autocrlf. Git for Windows by default sets this parameter to true in
this system level configuration. The Git installation location can be configured on the
Team > Git > Configuration preference page's 'System Settings' tab.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.ui 2 0 2018-09-25 20:52:49.305
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Ibn Zahoor'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jface 2 0 2018-09-25 20:59:48.493
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2018-09-25 20:59:48.493
!MESSAGE A conflict occurred for ALT+SHIFT+U:
Binding(ALT+SHIFT+U,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.remove.occurrence.annotations,Remove Occurrence Annotations,
		Removes the occurrence annotations from the current editor,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@700e3b73,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+U,
	ParameterizedCommand(Command(org.eclipse.mylyn.tasks.ui.command.markTaskUnread,Mark Task Unread,
		,
		Category(org.eclipse.mylyn.tasks.ui.commands,Task Repositories,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@40fc181d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.mylyn.tasks.ui.views.tasks,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2018-09-25 20:59:48.493
!MESSAGE A conflict occurred for INSERT:
Binding(INSERT,
	ParameterizedCommand(Command(org.eclipse.mylyn.tasks.ui.command.new.local.task,New Local Task,
		,
		Category(org.eclipse.mylyn.tasks.ui.commands,Task Repositories,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@413069a0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.mylyn.tasks.ui.views.tasks,,,system)
Binding(INSERT,
	ParameterizedCommand(Command(org.eclipse.ui.edit.text.toggleOverwrite,Toggle Overwrite,
		Toggle overwrite mode,
		Category(org.eclipse.ui.category.textEditor,Text Editing,Text Editing Commands,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19db3c2e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2018-09-25 20:59:48.493
!MESSAGE A conflict occurred for ALT+ARROW_UP:
Binding(ALT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.mylyn.tasks.ui.command.goToPreviousUnread,Go To Previous Unread Task,
		,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@68ddd415,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.mylyn.tasks.ui.views.tasks,,,system)
Binding(ALT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.ui.edit.text.moveLineUp,Move Lines Up,
		Moves the selected lines up,
		Category(org.eclipse.ui.category.textEditor,Text Editing,Text Editing Commands,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@180f49c5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2018-09-25 20:59:48.493
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_DOWN:
Binding(ALT+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@38138629,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToNextUnread,Mark Task Read and Go To Next Unread Task,
		,
		Category(org.eclipse.mylyn.tasks.ui.commands,Task Repositories,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7a2c95e2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.mylyn.tasks.ui.views.tasks,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2018-09-25 20:59:48.493
!MESSAGE A conflict occurred for ALT+ARROW_DOWN:
Binding(ALT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.mylyn.tasks.ui.command.goToNextUnread,Go To Next Unread Task,
		,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1536ea40,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.mylyn.tasks.ui.views.tasks,,,system)
Binding(ALT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.ui.edit.text.moveLineDown,Move Lines Down,
		Moves the selected lines down,
		Category(org.eclipse.ui.category.textEditor,Text Editing,Text Editing Commands,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3ad6ecc5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2018-09-25 20:59:48.493
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_UP:
Binding(ALT+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58f5db3b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.mylyn.tasks.ui.command.markTaskReadGoToPreviousUnread,Mark Task Read and Go To Previous Unread Task,
		,
		Category(org.eclipse.mylyn.tasks.ui.commands,Task Repositories,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c732cc2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.mylyn.tasks.ui.views.tasks,,,system)

!ENTRY org.eclipse.wb.core 4 4 2018-09-25 22:41:04.399
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: new JFrame()
!STACK 0
java.lang.Error: new JFrame()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3080)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1772)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:279)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 140 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-25 22:41:18.556
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3080)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1772)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:279)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 140 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-25 22:41:21.119
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-25 22:41:22.556
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-25 22:41:30.636
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-25 22:41:31.698
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: new JLabel("")
!STACK 0
java.lang.Error: new JLabel("")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-25 22:41:32.605
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: new JLabel("")
!STACK 0
java.lang.Error: new JLabel("")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$82c147cf.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.core.net 4 0 2018-09-25 22:46:42.766
!MESSAGE WinHttp.DetectAutoProxyConfigUrl for wpad failed with error 'The Proxy Auto-configuration URL was not found.
' #12180.

!ENTRY org.eclipse.m2e.logback.appender 4 0 2018-09-25 22:46:43.345
!MESSAGE Failed to open search index.

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 18:16:36.083
!MESSAGE Designer [1.6.1.r43x201309100023.201809252241]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor243.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$17f6a7b6.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.setLayout(ContainerInfo.java:409)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo$5.runEx(ContainerInfo.java:199)
	at org.eclipse.wb.internal.core.model.util.ObjectInfoAction$1$1.run(ObjectInfoAction.java:86)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.internal.core.model.util.ObjectInfoAction$1.run(ObjectInfoAction.java:84)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runLog(ExecutionUtils.java:106)
	at org.eclipse.wb.internal.core.model.util.ObjectInfoAction.run(ObjectInfoAction.java:81)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
!SESSION 2018-09-28 22:05:41.026 -----------------------------------------------
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0_92
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-09-28 22:08:19.113
!MESSAGE Warning: EGit couldn't detect the installation path "gitPrefix" of native Git. Hence EGit can't respect system level
Git settings which might be configured in ${gitPrefix}/etc/gitconfig under the native Git installation directory.
The most important of these settings is core.autocrlf. Git for Windows by default sets this parameter to true in
this system level configuration. The Git installation location can be configured on the
Team > Git > Configuration preference page's 'System Settings' tab.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.ui 2 0 2018-09-28 22:08:19.342
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Ibn Zahoor'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 22:48:34.380
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JFrame()
!STACK 0
java.lang.Error: new JFrame()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3080)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1772)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:279)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 140 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 22:48:36.942
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 22:48:38.087
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 22:48:39.052
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 22:48:40.098
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 22:48:41.192
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JLabel("Page Faults:  0")
!STACK 0
java.lang.Error: new JLabel("Page Faults:  0")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 22:48:43.183
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JLabel("Page Faults:  0")
!STACK 0
java.lang.Error: new JLabel("Page Faults:  0")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException

!ENTRY org.eclipse.core.net 4 0 2018-09-28 23:06:17.083
!MESSAGE WinHttp.DetectAutoProxyConfigUrl for wpad failed with error 'The Proxy Auto-configuration URL was not found.
' #12180.

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 23:43:23.443
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JTextField()
!STACK 0
java.lang.Error: new JTextField()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3080)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1772)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:279)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 23:43:25.679
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JTextField()
!STACK 0
java.lang.Error: new JTextField()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException

!ENTRY org.eclipse.wb.core 4 4 2018-09-28 23:43:26.747
!MESSAGE Designer [1.6.1.r43x201309100023.201809282248]: new JTextField()
!STACK 0
java.lang.Error: new JTextField()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$691365ab.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException

!ENTRY org.eclipse.jdt.core 4 4 2018-10-02 19:01:56.873
!MESSAGE Background Indexer Crash Recovery
!STACK 0
java.lang.NegativeArraySizeException
	at org.eclipse.jdt.internal.compiler.util.HashtableOfObject.<init>(HashtableOfObject.java:38)
	at org.eclipse.jdt.internal.core.index.DiskIndex.readCategoryTable(DiskIndex.java:642)
	at org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategory(DiskIndex.java:463)
	at org.eclipse.jdt.internal.core.index.DiskIndex.mergeCategories(DiskIndex.java:455)
	at org.eclipse.jdt.internal.core.index.DiskIndex.mergeWith(DiskIndex.java:549)
	at org.eclipse.jdt.internal.core.index.Index.save(Index.java:197)
	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndex(IndexManager.java:859)
	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndexes(IndexManager.java:901)
	at org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle(IndexManager.java:618)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java:388)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:39:48.129
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JFrame()
!STACK 0
java.lang.Error: new JFrame()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3080)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1772)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:279)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 140 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:39:51.214
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:39:52.916
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:39:54.269
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:39:56.292
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:39:57.479
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JLabel("Virtual Memory (Visualization)")
!STACK 0
java.lang.Error: new JLabel("Virtual Memory (Visualization)")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:39:58.741
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JLabel("Virtual Memory (Visualization)")
!STACK 0
java.lang.Error: new JLabel("Virtual Memory (Visualization)")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:40:02.143
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JComboBox<String>()
!STACK 0
java.lang.Error: new JComboBox<String>()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:40:03.867
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: new JComboBox<String>()
!STACK 0
java.lang.Error: new JComboBox<String>()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$42b8a22a.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:53:44.468
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:429)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:53:44.859
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:429)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:53:45.077
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:429)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:53:57.018
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:429)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:53:57.393
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:429)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:53:57.580
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Canvas.WM_KEYDOWN(Canvas.java:429)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:54:58.254
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Tree.WM_KEYDOWN(Tree.java:6137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6005)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4990)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:54:58.621
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Tree.WM_KEYDOWN(Tree.java:6137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6005)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4990)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:54:58.824
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Tree.WM_KEYDOWN(Tree.java:6137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6005)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4990)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:57:24.713
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Tree.WM_KEYDOWN(Tree.java:6137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6005)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4990)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:57:25.025
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Tree.WM_KEYDOWN(Tree.java:6137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6005)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4990)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.wb.core 4 4 2018-10-03 20:57:25.197
!MESSAGE Designer [1.6.1.r43x201309100023.201810032039]: java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.storeLayoutDataDefault(LayoutInfo.java:397)
	at org.eclipse.wb.internal.swing.model.layout.BoxLayoutInfo.storeLayoutData(BoxLayoutInfo.java:143)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo.onDelete(LayoutInfo.java:213)
	at org.eclipse.wb.internal.swing.model.layout.LayoutInfo$1.before(LayoutInfo.java:89)
	at sun.reflect.GeneratedMethodAccessor303.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.model.broadcast.BroadcastSupport$1.intercept(BroadcastSupport.java:208)
	at org.eclipse.wb.core.model.broadcast.ObjectInfoDelete$$EnhancerByCGLIB$$d7ee0211.before(<generated>)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:809)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.deleteJavaInfo(JavaInfoUtils.java:2036)
	at org.eclipse.wb.internal.core.model.creation.ConstructorCreationSupport.delete(ConstructorCreationSupport.java:418)
	at org.eclipse.wb.core.model.JavaInfo$7.run(JavaInfo.java:815)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.model.JavaInfo.delete(JavaInfo.java:803)
	at org.eclipse.wb.core.model.AbstractComponentInfo.delete(AbstractComponentInfo.java:215)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction$2.executeEdit(DeleteAction.java:123)
	at org.eclipse.wb.core.gef.command.EditCommand$1.run(EditCommand.java:52)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.EditCommand.execute(EditCommand.java:50)
	at org.eclipse.wb.internal.gef.core.CompoundCommand.execute(CompoundCommand.java:89)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.access$0(CompoundEditCommand.java:1)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand$1.run(CompoundEditCommand.java:47)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.run(ExecutionUtils.java:324)
	at org.eclipse.wb.core.gef.command.CompoundEditCommand.execute(CompoundEditCommand.java:45)
	at org.eclipse.wb.internal.gef.core.EditDomain.executeCommand(EditDomain.java:59)
	at org.eclipse.wb.internal.core.editor.actions.DeleteAction.run(DeleteAction.java:64)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.OutOfOrderListener.handleEvent(OutOfOrderListener.java:70)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmKeyDown(Widget.java:1827)
	at org.eclipse.swt.widgets.Control.WM_KEYDOWN(Control.java:4975)
	at org.eclipse.swt.widgets.Tree.WM_KEYDOWN(Tree.java:6137)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4643)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:6005)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4990)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
!SESSION 2018-10-03 21:07:03.805 -----------------------------------------------
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0_92
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 21:07:57.274
!MESSAGE Warning: EGit couldn't detect the installation path "gitPrefix" of native Git. Hence EGit can't respect system level
Git settings which might be configured in ${gitPrefix}/etc/gitconfig under the native Git installation directory.
The most important of these settings is core.autocrlf. Git for Windows by default sets this parameter to true in
this system level configuration. The Git installation location can be configured on the
Team > Git > Configuration preference page's 'System Settings' tab.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 21:07:57.306
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Ibn Zahoor'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2018-10-03 21:11:37.039 -----------------------------------------------
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0_92
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 21:12:02.746
!MESSAGE Warning: EGit couldn't detect the installation path "gitPrefix" of native Git. Hence EGit can't respect system level
Git settings which might be configured in ${gitPrefix}/etc/gitconfig under the native Git installation directory.
The most important of these settings is core.autocrlf. Git for Windows by default sets this parameter to true in
this system level configuration. The Git installation location can be configured on the
Team > Git > Configuration preference page's 'System Settings' tab.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.ui 2 0 2018-10-03 21:12:02.778
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Ibn Zahoor'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.core.net 4 0 2018-10-03 21:53:51.878
!MESSAGE WinHttp.DetectAutoProxyConfigUrl for wpad failed with error 'The Proxy Auto-configuration URL was not found.
' #12180.

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:12.296
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JFrame()
!STACK 0
java.lang.Error: new JFrame()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3080)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1772)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:279)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 140 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:16.025
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:17.780
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:19.047
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:20.394
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:21.582
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JLabel("Virtual Memory (Visualization)")
!STACK 0
java.lang.Error: new JLabel("Virtual Memory (Visualization)")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:23.095
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JLabel("Virtual Memory (Visualization)")
!STACK 0
java.lang.Error: new JLabel("Virtual Memory (Visualization)")
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:24.891
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JComboBox<String>()
!STACK 0
java.lang.Error: new JComboBox<String>()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException

!ENTRY org.eclipse.wb.core 4 4 2018-10-04 11:05:26.968
!MESSAGE Designer [1.6.1.r43x201309100023.201810041105]: new JComboBox<String>()
!STACK 0
java.lang.Error: new JComboBox<String>()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$a9e3e21.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:32.419
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:32.792
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:32.807
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:32.964
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:33.354
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:33.385
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:33.470
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:34.166
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:34.197
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:34.260
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:34.641
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:34.672
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:34.735
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:35.111
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:35.126
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:35.204
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:35.637
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:35.668
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:35.731
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:36.153
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:36.184
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:36.246
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:36.676
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:36.691
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:36.770
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:37.207
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:37.238
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:37.332
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:37.797
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:37.828
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2018-10-04 14:53:37.890
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package UI;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.Document;
public class Visual {
	public JFrame frame;
	public JPanel panel;
	private ArrayList<Integer> referenceString;
	private int returnInstructionIndex=0;
	private boolean isJumpInstruction=false;
	private int pc=0;
	private JPanel parentPanel;
	private int pageFaults=0;
	private int noOfFrames;
	private int noOfPages;
	private int referenceIndex=0;
	private Home home;
	private ArrayList<Integer> pageSet;
	private ArrayList<JPanel> physicalFrames;
	private Queue<Integer> index;
	private HashMap<Integer,Integer> hashIndex;
	private String[] replacementAlgos = { "FIFO", "LRU", "OPT" };
	private String selectedAlgo=null;
	private JPanel panel_3;
	private JPanel panel_4;
	private JPanel panel_5;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_6;
	private JPanel physicalPanel;
	private JPanel physicalSpacePanel;
	private JPanel logicalPanel;
	private JPanel panel_7;
	private JLabel label;
	private JPanel referenceStringPanel;
	private ArrayList<JLabel> referenceStringList;
	private JPanel referenceStringParentPanel;
	private JLabel lblNewLabel;
	private JLabel lblNewLabel_5;
	private JScrollPane scrollPane_2;
	private JScrollPane scrollPane_3;
	private JPanel algoSelectionPanel;
	private JButton btnRun;
	private JComboBox<String> comboBoxAlgo; 
	private int noOfHits=0;
	DefaultCategoryDataset dataset;
	private JPanel panel_10;
	private JButton  buttonNextInst;
	private JScrollPane scrollPane_4;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Visual window = new Visual(null);
					window.frame.setVisible(true);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Visual(Home h) {
		home=h;
		referenceString= new ArrayList<Integer>();
		referenceStringList = new ArrayList<JLabel>();
		index = new LinkedList<Integer>() ;
		hashIndex=new HashMap<Integer,Integer>();
		noOfFrames=home.getRamSize()/home.getFrameSize();
		pageSet = new ArrayList<Integer>(noOfFrames);
		physicalFrames= new ArrayList<JPanel>(noOfFrames);
		int progValue=Integer.parseInt(home.lblProgSize.getText());
		noOfPages=(progValue/home.getFrameSize()+1);
		initialize();

	}
	/*public Visual() {
		initialize();

	}*/
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setForeground(new Color(0, 0, 0));
		frame.getContentPane().setBackground(new Color(47, 79, 79));
		frame.setBounds(100, 100, 1321, 760);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(109, 197, 877, 435);
		frame.getContentPane().add(scrollPane);
		panel = new JPanel();
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane.setViewportView(panel);
		panel.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		parentPanel = new JPanel();
		panel.add(parentPanel);
	
		parentPanel.setLayout(new BoxLayout(parentPanel, BoxLayout.Y_AXIS));
		buttonNextInst = new JButton("Next Instruction");
		buttonNextInst.setForeground(Color.WHITE);
		buttonNextInst.setFont(new Font("Tahoma", Font.BOLD, 12));
		buttonNextInst.setBackground(SystemColor.textHighlight);
		buttonNextInst.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(!buttonNextInst.getText().equals("Save As PDF")){
					executeInstruction();
				}
				else{
					public void printToPDF(java.awt.Image awtImage, String fileName) {
				        try {
				            Document d = new Document();
				            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
				                    fileName));
				            d.open();


				            Image iTextImage = Image.getInstance(writer, awtImage, 1);
				            iTextImage.setAbsolutePosition(50, 50);
				            iTextImage.scalePercent(25);
				            d.add(iTextImage);

				            d.close();

				        } catch (Exception e) {
				            e.printStackTrace();
				        }   
				    }
					Document document = new Document();
					try {
					    PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("test.pdf"));
					    document.open();
					    PdfContentByte contentByte = writer.getDirectContent();
					    PdfTemplate template = contentByte.createTemplate(parentPanel.getWidth(), parentPanel.getHeight());
					    Graphics2D g2 = template.createGraphics(parentPanel.getWidth(), parentPanel.getHeight());
					    parentPanel.print(g2);
					    g2.dispose();
					    contentByte.addTemplate(template, 0, 0);
					} catch (Exception e) {
					    e.printStackTrace();
					}
					finally{
					    if(document.isOpen()){
					        document.close();
					    }
					}

				}
			}
		});

		buttonNextInst.setBounds(1007, 581, 186, 42);
		frame.getContentPane().add(buttonNextInst);

		JLabel lblNewJgoodiesTitle = new JLabel("Virtual Memory (Visualization)");
		lblNewJgoodiesTitle.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewJgoodiesTitle.setFont(new Font("Palatino Linotype", Font.BOLD, 22));
		lblNewJgoodiesTitle.setForeground(SystemColor.info);
		lblNewJgoodiesTitle.setBounds(196, 11, 535, 38);
		frame.getContentPane().add(lblNewJgoodiesTitle);
		scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(1007, 330, 108, 240);
		frame.getContentPane().add(scrollPane_2);
		physicalSpacePanel = new JPanel();
		scrollPane_2.setViewportView(physicalSpacePanel);
		physicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		physicalSpacePanel.setLayout(new BoxLayout(physicalSpacePanel, BoxLayout.X_AXIS));
		physicalPanel = new JPanel();
		physicalSpacePanel.add(physicalPanel);
		physicalPanel.setLayout(new BoxLayout(physicalPanel, BoxLayout.Y_AXIS));
		scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(1125, 330, 112, 240);
		frame.getContentPane().add(scrollPane_3);
		JPanel logicalSpacePanel = new JPanel();
		logicalSpacePanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		scrollPane_3.setViewportView(logicalSpacePanel);
		logicalSpacePanel.setLayout(new BoxLayout(logicalSpacePanel, BoxLayout.X_AXIS));
		logicalPanel = new JPanel();
		logicalSpacePanel.add(logicalPanel);
		logicalPanel.setForeground(new Color(240, 255, 255));
		logicalPanel.setBorder(new LineBorder(new Color(0, 0, 0)));
		logicalPanel.setLayout(new BoxLayout(logicalPanel, BoxLayout.Y_AXIS));
		JPanel panel_6 = new JPanel();
		panel_6.setBorder(null);
		panel_6.setBackground(new Color(47, 79, 79));
		FlowLayout flowLayout = (FlowLayout) panel_6.getLayout();
		flowLayout.setAlignment(FlowLayout.LEFT);
		panel_6.setBounds(101, 60, 499, 30);
		frame.getContentPane().add(panel_6);
		panel_3 = new JPanel();
		panel_6.add(panel_3);
		panel_3.setBackground(Color.GREEN);
		panel_3.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 13));
		lblNewLabel_1 = new JLabel("Empty Frame");
		panel_6.add(lblNewLabel_1);
		lblNewLabel_1.setForeground(new Color(240, 255, 255));
		lblNewLabel_1.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_4 = new JPanel();
		FlowLayout flowLayout_1 = (FlowLayout) panel_4.getLayout();
		flowLayout_1.setVgap(13);
		flowLayout_1.setHgap(10);
		panel_6.add(panel_4);
		panel_4.setBackground(Color.RED);
		JLabel lblNewLabel_2 = new JLabel("Occupied Frame");
		panel_6.add(lblNewLabel_2);
		lblNewLabel_2.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_2.setForeground(new Color(240, 255, 255));
		panel_6.add(Box.createHorizontalStrut(20));
		panel_5 = new JPanel();
		panel_5.setBackground(new Color(0, 250, 154));
		FlowLayout flowLayout_2 = (FlowLayout) panel_5.getLayout();
		flowLayout_2.setVgap(13);
		flowLayout_2.setHgap(10);
		panel_6.add(panel_5);
		JLabel lblNewLabel_3 = new JLabel("Demand Page");
		panel_6.add(lblNewLabel_3);
		lblNewLabel_3.setForeground(new Color(240, 255, 255));
		lblNewLabel_3.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		panel_7 = new JPanel();
		panel_7.setBorder(null);
		panel_7.setBackground(new Color(47, 79, 79));
		panel_7.setForeground(new Color(47, 79, 79));
		panel_7.setBounds(101, 101, 556, 41);
		frame.getContentPane().add(panel_7);
		panel_7.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
		JLabel lblNewLabel_4 = new JLabel("Total Number Of Frames :");
		panel_7.add(lblNewLabel_4);
		lblNewLabel_4.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_4.setForeground(new Color(240, 255, 255));
		label = new JLabel("0");
		label.setText(Integer.toString(noOfFrames));
		label.setForeground(Color.CYAN);
		label.setFont(new Font("Tahoma", Font.BOLD, 15));
		panel_7.add(label);
		panel_7.add(Box.createHorizontalStrut(20));
		lblNewLabel_6 = new JLabel("Total Number Of Pages :");
		panel_7.add(lblNewLabel_6);
		lblNewLabel_6.setFont(new Font("Palatino Linotype", Font.BOLD, 14));
		lblNewLabel_6.setForeground(new Color(240, 255, 255));
		JLabel lblTotalPages = new JLabel("");
		panel_7.add(lblTotalPages);
		lblTotalPages.setText(Integer.toString(noOfPages));
		lblTotalPages.setFont(new Font("Tahoma", Font.BOLD, 15));
		lblTotalPages.setForeground(Color.CYAN);
		JLabel lblReferencedPages = new JLabel("Referenced Pages");
		lblReferencedPages.setForeground(new Color(135, 206, 250));
		lblReferencedPages.setFont(new Font("Segoe UI", Font.BOLD, 15));
		lblReferencedPages.setBounds(99, 153, 189, 33);
		frame.getContentPane().add(lblReferencedPages);

		lblNewLabel = new JLabel("<html>Physical<br>Address Space</html>");
		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel.setForeground(Color.WHITE);
		lblNewLabel.setBounds(1011, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel);

		lblNewLabel_5 = new JLabel("<html>Logical<br>Address Space</html>");
		lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_5.setForeground(Color.WHITE);
		lblNewLabel_5.setBounds(1131, 289, 90, 30);
		frame.getContentPane().add(lblNewLabel_5);
		
		scrollPane_4 = new JScrollPane();
		scrollPane_4.setBounds(241, 148, 745, 50);
		frame.getContentPane().add(scrollPane_4);

		referenceStringParentPanel = new JPanel();
		scrollPane_4.setViewportView(referenceStringParentPanel);
		referenceStringParentPanel.setLayout(new BoxLayout(referenceStringParentPanel, BoxLayout.X_AXIS));

		referenceStringPanel = new JPanel();
		referenceStringPanel.setLayout(new BoxLayout(referenceStringPanel, BoxLayout.X_AXIS));
		referenceStringParentPanel.add(referenceStringPanel);

		algoSelectionPanel = new JPanel();
		algoSelectionPanel.setBounds(652, 112, 334, 30);
		frame.getContentPane().add(algoSelectionPanel);
		algoSelectionPanel.setLayout(new BoxLayout(algoSelectionPanel, BoxLayout.X_AXIS));

		Component horizontalStrut_2 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_2);

		JLabel lblNewLabel_8 = new JLabel("Page Replacement Algorithm");
		algoSelectionPanel.add(lblNewLabel_8);

		Component horizontalStrut = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut);

		comboBoxAlgo = new JComboBox<String>();
		comboBoxAlgo.setMaximumSize(new Dimension(80, 40));
		comboBoxAlgo.setModel(new DefaultComboBoxModel<String>(new String[] {"FIFO", "LRU", "OPT"}));
		algoSelectionPanel.add(comboBoxAlgo);

		Component horizontalStrut_1 = Box.createHorizontalStrut(20);
		algoSelectionPanel.add(horizontalStrut_1);

		btnRun = new JButton("Run");
		btnRun.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				buttonNextInst.setText("Next Instruction");
				pc=0;
				returnInstructionIndex=0;
				referenceIndex=0;
				isJumpInstruction=false;
				referenceString.clear();
				referenceStringPanel.removeAll();
				referenceStringParentPanel.removeAll();
				referenceStringList.clear();
				pageSet.clear();
				index.clear();
				hashIndex.clear();
				physicalFrames.clear();
				physicalPanel.removeAll();
				createPhysicalAddSpace();
				//lblPageFaults.setText("Page Faults:  0");
				pageFaults=0;
				noOfHits=0;
				selectedAlgo=comboBoxAlgo.getSelectedItem().toString();
				buttonNextInst.setText("Next Instruction");
				parentPanel.removeAll();
				parentPanel.revalidate();
				btnRun.setEnabled(false);
			}
		});
		btnRun.setForeground(Color.WHITE);
		btnRun.setBackground(SystemColor.textHighlight);
		algoSelectionPanel.add(btnRun);
		
		panel_10 = new JPanel();
		panel_10.setBounds(1007, 141, 258, 147);
		frame.getContentPane().add(panel_10);
		algoSelectionPanel.setVisible(false);
		for(int i:referenceString){
			JLabel page = new JLabel(Integer.toString(i));
			page.setMinimumSize(new Dimension(30,30));
			page.setPreferredSize(new Dimension(30,30));
			page.setMaximumSize(new Dimension(30,30));
			page.setOpaque(true);
			page.setHorizontalAlignment(JLabel.CENTER);
			referenceStringPanel.add(Box.createHorizontalStrut(20));
			referenceStringPanel.add(page);	
		}
		
		createPhysicalAddSpace();
		for(int i=noOfPages-1;i>=0;i--){
			JPanel pan1 = new JPanel();
			pan1.setBackground(Color.CYAN);
			pan1.setBorder(new LineBorder(new Color(0, 0, 0)));
			logicalPanel.add(pan1);
			pan1.setLayout(new BoxLayout(pan1, BoxLayout.X_AXIS));
			JLabel lbl1 = new JLabel("Page  " + i);
			lbl1.setMinimumSize(new Dimension(100,20));
			lbl1.setMaximumSize(new Dimension(100,20));
			lbl1.setPreferredSize(new Dimension(100,2));
			lbl1.setHorizontalAlignment(JLabel.CENTER);
			pan1.add(lbl1);
		}
		    dataset =  new DefaultCategoryDataset( );  		        

		// Generate the graph
		   JFreeChart chart = ChartFactory.createBarChart(
		   "Statistics", 				// Title
		   "Page Replacement Algorithm",            
	         "Page Faults",
		   dataset, 					// Dataset
		   PlotOrientation.VERTICAL, // Plot Orientation
		   true, 						// Show Legend
		   true, 				// Use tooltips
		   false 					// Configure chart to generate URLs?
		   );
		  panel_10.setLayout(new java.awt.BorderLayout());
		  ChartPanel CP = new ChartPanel(chart);
		  panel_10.add(CP,BorderLayout.CENTER);
		  CategoryPlot categoryPlot = chart.getCategoryPlot();
		  BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
		  br.setMaximumBarWidth(.05); // set maximum width to 5% of chart
		  panel_10.validate();
	}
	public void printToPDF(java.awt.Image awtImage, String fileName) {
        try {
            Document d = new Document();
            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
                    fileName));
            d.open();


            Image iTextImage = Image.getInstance(writer, awtImage, 1);
            iTextImage.setAbsolutePosition(50, 50);
            iTextImage.scalePercent(25);
            d.add(iTextImage);

            d.close();

        } catch (Exception e) {
            e.printStackTrace();
        }   
    }
	void createPhysicalAddSpace(){
		for(int i=0;i<noOfFrames;i++){

			JPanel pan = new JPanel();
			pan.setBackground(Color.GREEN);
			pan.setBorder(new LineBorder(new Color(0, 0, 0)));
			physicalPanel.add(pan);
			pan.setLayout(new BoxLayout(pan, BoxLayout.X_AXIS));
			JLabel lbl = new JLabel();
			lbl.setMinimumSize(new Dimension(100,20));
			lbl.setMaximumSize(new Dimension(100,20));
			lbl.setPreferredSize(new Dimension(100,20));
			lbl.setHorizontalAlignment(JLabel.CENTER);
			pan.add(lbl);
			physicalFrames.add(pan);
		}
	}
	void executeInstruction(){
		if(pc < home.instructions.size()){
			MyPanel  myPanel = home.instructions.get(pc);
			int startPage = myPanel.getStartPage();
			int destPage = myPanel.getDestinationPage();
			String type= (String)myPanel.comboBox.getSelectedItem();
			// if two pages are referenced in a single instruction
			if(startPage!=destPage){
				
				referenceString.add(startPage);
				addPageInReferenceString(startPage);
				referenceString.add(destPage);
				addPageInReferenceString(destPage);
				
			}
			else{
				referenceString.add(startPage);
				addPageInReferenceString(startPage);	
			}
			for(JLabel l:referenceStringList)
				l.setOpaque(false);
			referenceStringList.get(referenceStringList.size()-1).setOpaque(true);
			referenceStringPanel.revalidate();
			createMap(Integer.toString(startPage),Integer.toString(destPage),type);
			if(isJumpInstruction){
				isJumpInstruction=false;
				pc=returnInstructionIndex;

			}
			else if(type.equals("GoTo")){
				int destAdd = myPanel.getDestinationAddress();
				if(pc+1  < home.instructions.size()){
				int startAdd=home.instructions.get(pc+1).getStartAddress();
				
				if(destAdd==startAdd){
					pc++;
				}
				}
				else{
				// save address of next instruction to be executed
				returnInstructionIndex=pc+1;
				
				for(MyPanel p:home.instructions){
					if(p.getStartAddress() == destAdd){
						// load pc with the address of new instruction
						pc = home.instructions.indexOf(p);
						isJumpInstruction =true;
						break;
					}
				}
			}
			}
			else{
				pc++;
			}
			JPanel line = new JPanel();
			line.setPreferredSize(new Dimension(100, 2));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 2, false));
			parentPanel.add(line);
		}
		else{
			((JButton)algoSelectionPanel.getComponent(5)).setEnabled(true);
			buttonNextInst.setText("Save As PDF");
			dataset.addValue(pageFaults, selectedAlgo, "");

		}

	}
	void addPageInReferenceString(int pageNo){
		JLabel page = new JLabel(Integer.toString(pageNo));
		page.setMinimumSize(new Dimension(30,30));
		page.setPreferredSize(new Dimension(30,30));
		page.setMaximumSize(new Dimension(30,30));
		page.setBackground(Color.GREEN);
		page.setHorizontalAlignment(JLabel.CENTER);
		referenceStringPanel.add(Box.createHorizontalStrut(20));
		referenceStringPanel.add(page);
		referenceStringList.add(page);
		referenceStringPanel.revalidate();
	}
	@SuppressWarnings("unchecked")
	void createMap(String start,String end,String insType){
		ArrayList<Frame> frames= new ArrayList<Frame>();
		InstructionPanel instPanel = new InstructionPanel();
		instPanel.lblStartPage.setText(start);
		instPanel.lblType.setText(insType);	
		instPanel.lblDestPage.setText(end);
		parentPanel.add(Box.createVerticalStrut(30));
		parentPanel.add(instPanel);
		// traverse the page reference  string 
		while(referenceIndex<referenceString.size() ){
			//if empty frames exist 
			if (pageSet.size() < noOfFrames){
				//if a given page in reference string does not exist in any frame
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					pageSet.add(referenceString.get(referenceIndex));
					index.add(referenceString.get(referenceIndex));
					hashIndex.put(referenceString.get(referenceIndex), referenceIndex);
					pageFaults++;
				}
			}

			else{
				//No room in frames and the referenced page does not exist in frames i.e page fault occurred 
				if (!pageSet.contains(referenceString.get(referenceIndex))){
					instPanel.pf.setVisible(true);
					if(selectedAlgo == null){
						selectedAlgo = (String)JOptionPane.showInputDialog(null, "Choose any Replacement Algorithm ", "Page Fault Occured",
								JOptionPane.INFORMATION_MESSAGE,null, replacementAlgos, replacementAlgos[0]);
						algoSelectionPanel.setVisible(true);
						((JComboBox<String>)algoSelectionPanel.getComponent(3)).setSelectedItem(selectedAlgo);
						((JButton)algoSelectionPanel.getComponent(5)).setEnabled(false);
					}
					if(selectedAlgo.equals("FIFO")){
						fifo(referenceIndex);
					}
					else if(selectedAlgo.equals("LRU")){
						lru(referenceIndex);

					}	
				}
				//No room in frames but the referenced page already present in some frame
				else{
					hashIndex.put(referenceString.get(referenceIndex),referenceIndex);				
					noOfHits++;
					
				}
			}
			referenceIndex++;
		}

		int pageNo=0;
		String tempDesc="<html>";
		for(int i=0;i<noOfFrames;i++){
			Frame f = new Frame();
			if(pageNo<pageSet.size()){
				Line l = new Line();
				f.add(l);
				Page p = new Page(pageSet.get(pageNo).toString());
				f.add(p);
				f.frame.setBackground(Color.RED);
				physicalFrames.get(noOfFrames-1-i).setBackground(Color.CYAN);
				((JLabel)physicalFrames.get(noOfFrames-1-i).getComponent(0)).setText("      Page  " + pageSet.get(pageNo).toString() +"     ");
				tempDesc = tempDesc +" Page No. " + (pageSet.get(pageNo).toString()) + " mappped to Frame No." + i+"<br>";
				pageNo++;
			}
			instPanel.mappingPanel.add(f);
			frames.add(f);	
		}
		tempDesc = tempDesc + "</html>";

		instPanel.description.setText(tempDesc);
		parentPanel.revalidate();	
	}
	void fifo(int i){	
		int val = index.poll();
		int ind=pageSet.indexOf(val);
		pageSet.remove(ind);
		pageSet.add(ind, referenceString.get(i));
		index.add(referenceString.get(i));
	
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();

	}
	void lru(int i){
		int l=Integer.MAX_VALUE; 
		int page=-1;
		Iterator<Integer> it = pageSet.iterator();
		while(it.hasNext()){
			int	p = it.next();
			if(hashIndex.get(p)<l){
				page =p;
				l=hashIndex.get(p);
			}	
		}
		
		int pageIndex=pageSet.indexOf(page);
		pageSet.remove(pageIndex);
		hashIndex.remove(page);
		pageSet.add(pageIndex,referenceString.get(i));
		hashIndex.put(referenceString.get(i), i);
		
		pageFaults++;
		//lblPageFaults.setText("Page Faults:  "+pageFaults);
		((JLabel)physicalFrames.get(noOfFrames-1-pageIndex).getComponent(0)).setText("      Page  " + referenceString.get(i) +"     ");
		physicalSpacePanel.revalidate();
		parentPanel.revalidate();	
	}

	private class Frame extends JPanel{
		private Frame panel;
		private JPanel frame;
		Frame(){
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
			frame = new JPanel();
			frame.setBackground(Color.GREEN);
			FlowLayout flowLayout = (FlowLayout) frame.getLayout();
			flowLayout.setVgap(24);
			flowLayout.setHgap(10);
			frame.setBorder(new LineBorder(new Color(0, 0, 0)));
			panel.add(frame);	
		}

	}   
	private class Page extends JPanel{
		private JPanel page;
		private JLabel pageNo;
		Page(String p){
			super();  		
			page = this;
			FlowLayout flowLayout_1 = (FlowLayout) page.getLayout();
			flowLayout_1.setVgap(20);
			flowLayout_1.setHgap(10);
			page.setBackground(Color.CYAN);
			page.setBorder(new LineBorder(new Color(0, 0, 0)));
			pageNo = new JLabel(p);
			pageNo.setMaximumSize(new Dimension(10, 20));
			page.add(pageNo);
		}
	} 
	private class Line extends JPanel{
		private JPanel line;
		Line(){
			super();
			line = this;   		
			line.setMaximumSize(new Dimension(2, 20));
			line.setBorder(new LineBorder(new Color(0, 0, 0), 3));
			line.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5)); 
		}
	}


	private class InstructionPanel extends JPanel {
		private JLabel lblInstructionType;
		private JLabel lblType;
		private JLabel lblInstructionSourcePageNo;
		private JLabel lblStartPage;
		private JLabel lblDestinationPageNo;
		private JLabel lblDestPage;
		InstructionPanel panel;
		private JPanel instructionPanel;
		private JPanel instructionTypePanel;
		private JPanel startPagePanel;
		private JPanel destinationPagePanel;
		private JPanel mappingPanel;
		public JLabel description;
		public JLabel pf;

		InstructionPanel() {
			super();
			panel = this;
			panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
			instructionPanel = new JPanel();
			panel.add(instructionPanel);
			instructionPanel.setLayout(new BoxLayout(instructionPanel,BoxLayout.Y_AXIS));
			pf = new JLabel("PAGE FAULT OCCURED");
			pf.setForeground(Color.red);
			pf.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionPanel.add(Box.createVerticalStrut(10));
			pf.setVisible(false);
			instructionTypePanel = new JPanel();
			instructionPanel.add(instructionTypePanel);

			lblInstructionType = new JLabel("Instruction Type   :");
			lblInstructionType.setFont(new Font("Tahoma", Font.BOLD, 14));
			instructionTypePanel.add(lblInstructionType);

			lblType = new JLabel("");
			instructionTypePanel.add(lblType);

			instructionPanel.add(Box.createVerticalStrut(20));
			startPagePanel = new JPanel();
			instructionPanel.add(startPagePanel);

			lblInstructionSourcePageNo = new JLabel("Source Page Number:         ");
			lblInstructionSourcePageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			startPagePanel.add(lblInstructionSourcePageNo);

			lblStartPage = new JLabel("");

			startPagePanel.add(lblStartPage);
			instructionPanel.add(Box.createVerticalStrut(20));
			destinationPagePanel = new JPanel();
			instructionPanel.add(destinationPagePanel);
			lblDestinationPageNo = new JLabel("Destination Page Number:");
			lblDestinationPageNo.setFont(new Font("Tahoma", Font.BOLD, 14));
			destinationPagePanel.add(lblDestinationPageNo);

			lblDestPage = new JLabel("");
			destinationPagePanel.add(lblDestPage);
			instructionPanel.add(Box.createVerticalStrut(70));
			mappingPanel = new JPanel();
			panel.add(Box.createHorizontalStrut(100));
			panel.add(mappingPanel);
			panel.add(Box.createHorizontalStrut(30));
			mappingPanel.add(pf);
			description = new JLabel(" ");
			JPanel p = new JPanel();
			p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
			p.add(pf);
			p.add(Box.createVerticalStrut(10));
			p.add(description);
			panel.add(p);

		}

	}
	public class LargePanelToImageMCVE {

	    public LargePanelToImageMCVE() {
	        LargeImagePanel panel = new LargeImagePanel();
	        JFrame frame = new JFrame();
	        frame.add(new JScrollPane(panel));
	        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
	        frame.setVisible(true);

	        final java.awt.Image image = getImageFromPanel(panel);

	        /* This was just a text panel to make sure the full panel was
	         * drawn to the panel.
	         */
	        JPanel newPanel = new JPanel() {
	            @Override
	            protected void paintComponent(Graphics g) {
	                super.paintComponent(g);
	                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
	            }

	            @Override
	            public Dimension getPreferredSize() {
	                return new Dimension(300, 300);
	            }
	        };

	        /* Print Image to PDF */
	        String fileName = "test1.pdf";
	        printToPDF(image, fileName);

	        /* This was just a test to show the newPanel drew the entire
	         * original panel (scaled)
	         */
	        JOptionPane.showMessageDialog(null, newPanel);

	    }

	    public void printToPDF(java.awt.Image awtImage, String fileName) {
	        try {
	            Document d = new Document();
	            PdfWriter writer = PdfWriter.getInstance(d, new FileOutputStream(
	                    fileName));
	            d.open();


	            Image iTextImage = Image.getInstance(writer, awtImage, 1);
	            iTextImage.setAbsolutePosition(50, 50);
	            iTextImage.scalePercent(25);
	            d.add(iTextImage);

	            d.close();

	        } catch (Exception e) {
	            e.printStackTrace();
	        }   
	    }

	    public java.awt.Image getImageFromPanel(Component component) {

	        BufferedImage image = new BufferedImage(component.getWidth(),
	                component.getHeight(), BufferedImage.TYPE_INT_RGB);
	        component.paint(image.getGraphics());
	        return image;
	    }

	    /**
	     * Demo panel that is 2000x2000 px with alternating squares
	     * to check all squares are drawn to image
	     */
	    public class LargeImagePanel extends JPanel {
	        private static final int FULL_SIZE = 2000;
	        private static final int PER_ROW_COLUMN = 20;
	        private static final int SQUARE_SIZE = FULL_SIZE / PER_ROW_COLUMN;

	        protected void paintComponent(Graphics g) {
	            super.paintComponent(g);
	            for (int row = 0; row < PER_ROW_COLUMN; row++) {
	                for (int col = 0; col < PER_ROW_COLUMN; col++) {
	                    if ((row % 2) == (col % 2)) {
	                        g.setColor(Color.BLACK);
	                    } else {
	                        g.setColor(Color.WHITE);
	                    }
	                    g.fillRect(col * SQUARE_SIZE, row * SQUARE_SIZE,
	                            SQUARE_SIZE, SQUARE_SIZE);
	                }
	            }
	        }

	        @Override
	        public Dimension getPreferredSize() {
	            return new Dimension(FULL_SIZE, FULL_SIZE);
	        }
	    }

	   
	}
	
}



----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2018-10-04 14:53:38.390
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2018-10-04 14:53:38.419
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:506)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:325)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2307)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1544)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2474)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:537)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:186)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2679)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1222)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.getOverrideIndicators(OverrideIndicatorLabelDecorator.java:161)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.computeAdornmentFlags(OverrideIndicatorLabelDecorator.java:136)
	at org.eclipse.jdt.ui.OverrideIndicatorLabelDecorator.decorate(OverrideIndicatorLabelDecorator.java:273)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorDefinition.decorate(LightweightDecoratorDefinition.java:269)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnable.run(LightweightDecoratorManager.java:81)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate(LightweightDecoratorManager.java:365)
	at org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations(LightweightDecoratorManager.java:347)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.ensureResultCached(DecorationScheduler.java:371)
	at org.eclipse.ui.internal.decorators.DecorationScheduler$1.run(DecorationScheduler.java:331)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
!SESSION 2018-10-09 21:08:59.764 -----------------------------------------------
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0_92
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2018-10-09 21:09:16.311
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.egit.ui 2 0 2018-10-09 21:10:15.959
!MESSAGE Warning: EGit couldn't detect the installation path "gitPrefix" of native Git. Hence EGit can't respect system level
Git settings which might be configured in ${gitPrefix}/etc/gitconfig under the native Git installation directory.
The most important of these settings is core.autocrlf. Git for Windows by default sets this parameter to true in
this system level configuration. The Git installation location can be configured on the
Team > Git > Configuration preference page's 'System Settings' tab.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.ui 2 0 2018-10-09 21:10:16.084
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Ibn Zahoor'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.core.net 4 0 2018-10-09 21:56:18.856
!MESSAGE WinHttp.DetectAutoProxyConfigUrl for wpad failed with error 'The Proxy Auto-configuration URL was not found.
' #12180.

!ENTRY org.eclipse.wb.core 4 4 2018-10-09 22:06:42.448
!MESSAGE Designer [1.6.1.r43x201309100023.201810092206]: new JFrame()
!STACK 0
java.lang.Error: new JFrame()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.UndoManager.activate(UndoManager.java:90)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState_True(DesignPage.java:263)
	at org.eclipse.wb.internal.core.editor.DesignPage.handleActiveState(DesignPage.java:241)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode.showPage(DefaultMultiMode.java:125)
	at org.eclipse.wb.internal.core.editor.multi.DefaultMultiMode$1.widgetSelected(DefaultMultiMode.java:63)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:778)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3080)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1772)
	at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:279)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 140 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-09 22:06:45.148
!MESSAGE Designer [1.6.1.r43x201309100023.201810092206]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-09 22:06:46.688
!MESSAGE Designer [1.6.1.r43x201309100023.201810092206]: new JScrollPane()
!STACK 0
java.lang.Error: new JScrollPane()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-09 22:06:47.993
!MESSAGE Designer [1.6.1.r43x201309100023.201810092206]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getWriteMethod(PropertyDescriptor.java:271)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:447)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more

!ENTRY org.eclipse.wb.core 4 4 2018-10-09 22:06:49.387
!MESSAGE Designer [1.6.1.r43x201309100023.201810092206]: new JPanel()
!STACK 0
java.lang.Error: new JPanel()
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:71)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluateExpression(JavaInfoEvaluationHelper.java:630)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper.evaluate(JavaInfoEvaluationHelper.java:502)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.evaluateNode(JavaInfoParser.java:1309)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$1(JavaInfoParser.java:1300)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor$3.run(JavaInfoParser.java:602)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runRethrow(ExecutionUtils.java:119)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$ExecutionFlowParseVisitor.postVisit(JavaInfoParser.java:592)
	at sun.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:399)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.postVisit(<generated>)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2517)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.Assignment.accept0(Assignment.java:312)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.access$1(ExecutionFlowUtils.java:235)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:442)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:391)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:247)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.endVisit(ExecutionFlowUtils.java:421)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils$1.intercept(ExecutionFlowUtils.java:389)
	at org.eclipse.jdt.core.dom.ASTVisitor$$EnhancerByCGLIB$$19f34ba9.endVisit(<generated>)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:337)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.VariableDeclarationFragment.accept0(VariableDeclarationFragment.java:225)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.VariableDeclarationStatement.accept0(VariableDeclarationStatement.java:273)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:257)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:136)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:504)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.AnonymousClassDeclaration.accept0(AnonymousClassDeclaration.java:143)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0(ClassInstanceCreation.java:335)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2585)
	at org.eclipse.jdt.core.dom.MethodInvocation.accept0(MethodInvocation.java:245)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2562)
	at org.eclipse.jdt.core.dom.ExpressionStatement.accept0(ExpressionStatement.java:144)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2514)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:354)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement0(ExecutionFlowUtils.java:336)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visitStatement(ExecutionFlowUtils.java:315)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:247)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:228)
	at org.eclipse.wb.core.eval.ExecutionFlowUtils.visit(ExecutionFlowUtils.java:191)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parseRootMethods(JavaInfoParser.java:312)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:268)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.access$9(JavaInfoParser.java:238)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:153)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser$1.runObject(JavaInfoParser.java:1)
	at org.eclipse.wb.internal.core.utils.execution.ExecutionUtils.runDesignTime(ExecutionUtils.java:159)
	at org.eclipse.wb.internal.core.parser.JavaInfoParser.parse(JavaInfoParser.java:151)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:534)
	at org.eclipse.wb.internal.core.editor.DesignPage.access$9(DesignPage.java:522)
	at org.eclipse.wb.internal.core.editor.DesignPage$8$1.run(DesignPage.java:449)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4688)
	at org.eclipse.wb.internal.core.editor.DesignPage$8.run(DesignPage.java:446)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF_withProgress(DesignPage.java:465)
	at org.eclipse.wb.internal.core.editor.DesignPage.internal_refreshGEF(DesignPage.java:415)
	at org.eclipse.wb.internal.core.editor.UndoManager.refreshDesignerEditor(UndoManager.java:381)
	at org.eclipse.wb.internal.core.editor.DesignPage.refreshGEF(DesignPage.java:392)
	at org.eclipse.wb.internal.core.editor.actions.RefreshAction.run(RefreshAction.java:46)
	at org.eclipse.wb.internal.core.editor.actions.DesignPageAction.run(DesignPageAction.java:34)
	at org.eclipse.wb.internal.core.editor.errors.JavaExceptionComposite.doRefresh(JavaExceptionComposite.java:87)
	at org.eclipse.wb.internal.core.editor.errors.ExceptionComposite$3.widgetSelected(ExceptionComposite.java:129)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1057)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4170)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3759)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
Caused by: java.lang.NullPointerException
	at java.beans.MethodRef.get(MethodRef.java:72)
	at java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:207)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildred_Method(JavaInfoUtils.java:449)
	at org.eclipse.wb.internal.core.model.JavaInfoUtils.addExposedChildren(JavaInfoUtils.java:429)
	at org.eclipse.wb.internal.swing.model.component.ComponentInfo.createExposedChildren(ComponentInfo.java:109)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.createExposedChildren(ContainerInfo.java:143)
	at org.eclipse.wb.core.model.JavaInfo.initialize(JavaInfo.java:423)
	at org.eclipse.wb.internal.swing.model.component.ContainerInfo.initialize(ContainerInfo.java:114)
	at org.eclipse.wb.core.model.JavaInfo.setObject(JavaInfo.java:1288)
	at org.eclipse.wb.internal.core.model.JavaInfoEvaluationHelper$3.evaluationSuccessful(JavaInfoEvaluationHelper.java:271)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate0(AstEvaluationEngine.java:179)
	at org.eclipse.wb.core.eval.AstEvaluationEngine.evaluate(AstEvaluationEngine.java:61)
	... 132 more
